SQL注入，作为一个面试难点
知乎上的那个对于JVM虚拟机的问题
链表
二叉树
多线程（三人打牌）
full gc 什么时候会，在频繁full gc时怎么解决
四种引用的gc情况
慢查询及解决方案
map的put方法手写


浏览器上中文乱码问题：一开始用response的setCharacterEncoding(String charset) 设置response的编码，但我们发现客户端还是不能正常显示文字
原因：我们将response缓冲区的编码设置成UTF-8，但浏览器的默认编码是本地系统的编码，因为我们都是中文系统，所以客户端浏览器的默认编码是GBK，
我们可以手动修改浏览器的编码是UTF-8。

我们还可以在代码中指定浏览器解析页面的编码方式，
通过response的setContentType(String type)方法指定页面解析时的编码是UTF-8
response.setContentType("text/html;charset=UTF-8");

但是，如果下载中文文件，页面在下载时会出现中文乱码或不能显示文件名的情况，	原因是不同的浏览器默认对下载文件的编码方式不同，
ie是UTF-8编码方式，而火狐浏览器是Base64编码方式。所里这里需要解决浏览器兼容性问题，
解决浏览器兼容性问题的首要任务是要辨别访问者是ie还是火狐（其他），通过Http请求体中的一个属性可以辨别。
解决乱码方法如下（不要记忆--了解）：

if (agent.contains("MSIE")) {
		// IE浏览器
		filename = URLEncoder.encode(filename, "utf-8");
		filename = filename.replace("+", " ");
} else if (agent.contains("Firefox")) {
		// 火狐浏览器
BASE64Encoder base64Encoder = new BASE64Encoder();
		filename = "=?utf-8?B?"
				+ base64Encoder.encode(filename.getBytes("utf-8")) + "?=";
} else {
		// 其它浏览器
		filename = URLEncoder.encode(filename, "utf-8");				
}

其中agent就是请求头User-Agent的值

过滤器解决乱码问题 get乱码
	public String getParameter(String name) {
		String parameter = request.getParameter(name);//乱码
		try {
			parameter = new String(parameter.getBytes("iso8859-1"),"UTF-8");
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}
		return parameter;
	}
